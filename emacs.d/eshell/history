map (+ 1) (1 2 3)
mapcar (+ 1) (1 2 3)
mapcar (+) (1 2 3)
+1
+ 1
mapcar (lambda (n) (+ 1 n)) (1 2 3)
(lambda (x) (+ 1 x))
((lambda (x) (+ 1 x)) 23)
(mapcar (lambda (x) (+ 1 x)) (1 2 3))
(mapcar (lambda (x) (+ 1 x)) '(1 2 3))
((lambda (x) (+ 1 x)) 23)
(mapcar (lambda (n) (+ 1 n)) '(1 2 3))
(mapcar (+) '(1 2 3))
(mapcar '+ '(1 2 3))
(mapcar '(+1) '(1 2 3))
(mapcar '(+ 1) '(1 2 3))
(mapcar (+ 1) '(1 2 3))
(mapcar (lambda (n) (+ 1 n)) '(1 2 3))
ls
alias
v index.js 
frame-parameters
node
node .
cd ..
node hello-world/
cd ..
node examples/hello-world/
which node
/usr/local/bin/node examples/hello-world/
ls examples/
/usr/local/bin/node examples/mvc/
do examples/mvc/
do examples/mvc/
ls examples/mvc/
ls examples/mvc/views/
ls examples/mvc/controllers/
v examples/mvc/controllers/main/index.js 
do examples/mvc/
/usr/local/bin/node examples/mvc/
npm info express
clear 
reset
ls
v package.json 
ls -a examples/hello-world/
v examples/hello-world/index.js 
ls
v examples/hello-world/index.js 
v package.json 
ls lib/
node
v examples/hello-world/index.js 
v examples/hello-world/index.js 
lotr ~/.emacs.d/my-stuff/js2-mode.elc 
ls -otrh ~/.emacs.d/my-stuff/js2-mode.elc 
ls -otrh ~/.emacs.d/my-stuff/js2-mode.el
ls -otrh ~/.emacs.d/my-stuff/
v ~/.emacs.d/elpa/js2-mode-readme.txt 
ls -otrh ~/.emacs.d/elpa/js2*
v ~/.emacs.d/my-stuff/js2-mode.elc 
meteor --help
meteor --version
which meteor
brew info meteor
cd ../mytodo/
mkdir app
mkdir app/api
ff app/api/data.json
ff app/scripts/app.js 
v app/scripts/foo.js
v app/scripts/controllers/main.js
v app/views/main.html 
ff app/scripts/controllers/main.js
exit
()
ff
alias
eval (quote ())
eval ()
help
$(1)
$('())
echo *
echo *(:U)
cwd
pwd
cd ~
ls
echo *
echo
echo \'()
eval \'()
eval 
eval ()
eval (1 2 3)
eval (quote (1 2 3))
eval (quote '(1 2 3))
eval (cdr '(1 2 3))
eval (cdr (quote '(1 2 3)))
eval (cdr (quote (1 2 3)))
cdr (1 2 3)
+ 1 2
ls
pwd
which ls
unalias ls
/bin/ls
/bin/ls
+ 1 2
+ 1 2
+ 1 22
exit
(read-from-minibuffer "yo: ")
(defun greeting (from-name))
(defun greeting (from-name))
(greeting)
(greeting "erpa")
helloI am erpa and your derpa
local-name
(message "erpa")
(message local-name)
(message buffer-name)
buffer-name
buffer-face-mode 
buffer-file-name
buffer-name
(buffer-face-mode -1)
